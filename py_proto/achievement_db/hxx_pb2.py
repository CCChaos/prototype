# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: achievement_db.hxx

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='achievement_db.hxx',
  package='',
  serialized_pb=_b('\n\x12\x61\x63hievement_db.hxx\"3\n\x17PBDBAchievementComplete\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04time\x18\x02 \x01(\x05\"`\n\x13PBDBAchievementRole\x12\x36\n\x14\x63omplete_achievement\x18\x01 \x03(\x0b\x32\x18.PBDBAchievementComplete\x12\x11\n\tcur_level\x18\x02 \x01(\x05\x42\x02H\x01')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_PBDBACHIEVEMENTCOMPLETE = _descriptor.Descriptor(
  name='PBDBAchievementComplete',
  full_name='PBDBAchievementComplete',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='PBDBAchievementComplete.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time', full_name='PBDBAchievementComplete.time', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=73,
)


_PBDBACHIEVEMENTROLE = _descriptor.Descriptor(
  name='PBDBAchievementRole',
  full_name='PBDBAchievementRole',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='complete_achievement', full_name='PBDBAchievementRole.complete_achievement', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cur_level', full_name='PBDBAchievementRole.cur_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=171,
)

_PBDBACHIEVEMENTROLE.fields_by_name['complete_achievement'].message_type = _PBDBACHIEVEMENTCOMPLETE
DESCRIPTOR.message_types_by_name['PBDBAchievementComplete'] = _PBDBACHIEVEMENTCOMPLETE
DESCRIPTOR.message_types_by_name['PBDBAchievementRole'] = _PBDBACHIEVEMENTROLE

PBDBAchievementComplete = _reflection.GeneratedProtocolMessageType('PBDBAchievementComplete', (_message.Message,), dict(
  DESCRIPTOR = _PBDBACHIEVEMENTCOMPLETE,
  __module__ = 'achievement_db.hxx_pb2'
  # @@protoc_insertion_point(class_scope:PBDBAchievementComplete)
  ))
_sym_db.RegisterMessage(PBDBAchievementComplete)

PBDBAchievementRole = _reflection.GeneratedProtocolMessageType('PBDBAchievementRole', (_message.Message,), dict(
  DESCRIPTOR = _PBDBACHIEVEMENTROLE,
  __module__ = 'achievement_db.hxx_pb2'
  # @@protoc_insertion_point(class_scope:PBDBAchievementRole)
  ))
_sym_db.RegisterMessage(PBDBAchievementRole)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('H\001'))
# @@protoc_insertion_point(module_scope)
